name: SonarCloud analysis

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
  workflow_dispatch:

permissions:
  pull-requests: read

jobs:
  sonar-check:
    name: Sonar Check
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v4
        with: 
          fetch-depth: 0
          
      - uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '8.0.x'
          
      - name: SonarScanner Begin
        run: |
          dotnet new tool-manifest --force
          dotnet tool install dotnet-sonarscanner
          dotnet tool restore
          dotnet dotnet-sonarscanner begin `
            /k:"8540675-star_NetSdrClient" `
            /o:"8540675-star" `
            /d:sonar.token="${{ secrets.SONAR_TOKEN }}" `
            /d:sonar.host.url="https://sonarcloud.io" `
            /d:sonar.cs.opencover.reportsPaths="**/coverage.xml" `
            /d:sonar.cpd.cs.minimumTokens=40 `
            /d:sonar.cpd.cs.minimumLines=5 `
            /d:sonar.exclusions=**/bin/**,**/obj/**,**/sonarcloud.yml `
            /d:sonar.qualitygate.wait=true
        shell: pwsh
        
      - name: Restore
        run: dotnet restore NetSdrClient.sln
        
      - name: Build
        run: dotnet build NetSdrClient.sln -c Release --no-restore
        
      - name: SonarScanner End
        run: dotnet dotnet-sonarscanner end /d:sonar.token="${{ secrets.SONAR_TOKEN }}"
        shell: pwsh
